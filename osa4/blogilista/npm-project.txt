npm init

RAKENNE
├── index.js
├── app.js
├── build
│   ├── ...
├── controllers
│   └── notes.js
├── models
│   └── note.js
├── package-lock.json
├── package.json
├── utils
│   ├── logger.js
│   ├── config.js
│   └── middleware.js  

package.json:
"scripts": {
    "start": "node index.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  }

npm install express --save

(npm update)
(jos joskus pitää poistaa ladattuja, poista node_modules ja package.json,
sitten npm install)

npm install --save-dev nodemon
Jos nodemon-riippuvuus menee normaaliin "dependencies"-ryhmään, lisää deviinkin:
"dependencies": {
    "express": "^4.17.1",
  },
  "devDependencies": {
    "nodemon": "^2.0.2"
  }

package.json:
"scripts": {
    //..
    "dev": "nodemon index.js",
},
  // ..
}

Aja: npm run dev
->  http://localhost:

npm install morgan

npm install cors --save

Procfile: web: node index.js

heroku create <app-name>
git commit --allow-empty -m "heroku"
git push heroku master

FRONTEND tuotantoversio:
npm run build
(copy to backend)

{
  "scripts": {
    // ...
    "build:ui": "rm -rf build && cd ../../osa2/materiaali/notes-new && npm run build --prod && cp -r build ../../../osa3/notes-backend/",
    "deploy": "git push heroku master",
    "deploy:full": "npm run build:ui && git add . && git commit -m 'uibuild' && git push && npm run deploy",    
    "logs:prod": "heroku logs --tail"
  }
}

npm run build:ui

TAI (build.ui + deploy):
npm run deploy:full

"proxy": "http://localhost:3001"

Debug in Chrome:
node --inspect index.js

MongoDB connection string:
mongodb+srv://jariDB:jmsMdb2%23@cluster0-wnvyv.mongodb.net/bloglist-app?retryWrites=true&w=majority
TAI
mongodb+srv://jariDB:jmsMdb2%23@cluster0-wnvyv.mongodb.net/bloglist-app?retryWrites=true&w=majority

npm install mongoose --save

npm install dotenv --save
.env:
MONGODB_URI=mongodb+srv://jariDB:jmsMdb2%23@cluster0-wnvyv.mongodb.net/bloglist-app?retryWrites=true&w=majority

heroku config:set MONGODB_URI=mongodb+srv://jariDB:jmsMdb2%23@cluster0-wnvyv.mongodb.net/bloglist-app?retryWrites=true&w=majority

BACKEND:
npm install eslint --save-dev
node_modules/.bin/eslint --init
"scripts": {
    // ...
    "lint": "eslint ."
  // ...
}
npm run lint
